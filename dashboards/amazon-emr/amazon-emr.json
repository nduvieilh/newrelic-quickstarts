{
    "name": "Amazon EMR",
    "description": "",
    "pages": [
        {
            "name": "Amazon EMR",
            "description": "",
            "widgets": [
                {
                    "title": "Cluster status",
                    "layout": {
                        "height": 3,
                        "width": 8,
                        "row": 1,
                        "column": 1
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT uniqueCount(entity.id) FROM Metric WHERE metricName = 'aws.elasticmapreduce.TotalLoad' FACET `aws.elasticmapreduce.clusterStatus` TIMESERIES 5 minutes UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "",
                    "layout": {
                        "height": 6,
                        "width": 4,
                        "row": 1,
                        "column": 9
                    },
                    "visualization": {
                        "id": "viz.markdown"
                    },
                    "rawConfiguration": {
                        "text": "\n![Amazon EMR Icon](https://integrations.nr-assets.net/providers/emr.png) **Amazon Elastic Map Reduce (EMR)** \n\nAmazon EMR provides a managed Hadoop framework that makes it easy, fast, and cost-effective to process vast amounts of data across dynamically scalable Amazon EC2 instances. You can also run other popular distributed frameworks such as Apache Spark, HBase, Presto, and Flink in Amazon EMR, and interact with data in other AWS data stores such as Amazon S3 and Amazon DynamoDB.\n\n\n"
                    }
                },
                {
                    "title": "Container allocation status",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 4,
                        "column": 1
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.elasticmapreduce.ContainerAllocated`) as 'Allocated Containers', average(`aws.elasticmapreduce.ContainerReserved`) as 'Reserved Containers', average(`aws.elasticmapreduce.ContainerPending`) as 'Pending Containers' FROM Metric TIMESERIES 5 minutes UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "Application status",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 4,
                        "column": 5
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.elasticmapreduce.AppsCompleted`) as 'Completed Applications', average(`aws.elasticmapreduce.AppsFailed`) as 'Failed Applications', average(`aws.elasticmapreduce.AppsKilled`) as 'Killed Applications', average(`aws.elasticmapreduce.AppsPending`) as 'Pending Applications', average(`aws.elasticmapreduce.AppsRunning`) as 'Running Applications', average(`aws.elasticmapreduce.AppsSubmitted`) as 'Submitted Applications' FROM Metric TIMESERIES 5 minutes UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "Core nodes status",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 7,
                        "column": 1
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.elasticmapreduce.CoreNodesRunning`) as 'Core Nodes Running', average(`aws.elasticmapreduce.CoreNodesPending`) as 'Core Nodes Pending' FROM Metric TIMESERIES 5 minutes UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "Mapreduce nodes status",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 7,
                        "column": 5
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.elasticmapreduce.MRTotalNodes`) as 'Total Nodes', average(`aws.elasticmapreduce.MRActiveNodes`) as 'Active Nodes', average(`aws.elasticmapreduce.MRDecommissionedNodes`) as 'Decommissioned Nodes', average(`aws.elasticmapreduce.MRLostNodes`) as 'Lost Nodes', average(`aws.elasticmapreduce.MRRebootedNodes`) as 'Rebooted Nodes' , average(`aws.elasticmapreduce.MRUnhealthyNodes`) as 'Unhealthy Nodes' FROM Metric TIMESERIES 5 minutes UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "Memory status",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 7,
                        "column": 9
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.elasticmapreduce.MemoryAllocatedMB`) as 'Allocated Memory', average(`aws.elasticmapreduce.MemoryAvailableMB`) as 'Available Memory', average(`aws.elasticmapreduce.MemoryReservedMB`) as 'Reserved Memory', average(`aws.elasticmapreduce.MemoryTotalMB`) as 'Total Memory' FROM Metric TIMESERIES 5 minutes UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "Total load (IO)",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 10,
                        "column": 1
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.elasticmapreduce.TotalLoad`) FROM Metric TIMESERIES 5 minutes FACET entity.name UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "S3 IO bytes",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 10,
                        "column": 5
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.elasticmapreduce.S3BytesRead`) as 'S3 Read Bytes', average(`aws.elasticmapreduce.S3BytesWritten`) as 'S3 Written Bytes' FROM Metric TIMESERIES auto UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "Disk (HDFS) status",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 10,
                        "column": 9
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.elasticmapreduce.HDFSUtilization`) as 'Disk (HDFS) Utilization', average(`aws.elasticmapreduce.CapacityRemainingGB`) as 'Disk (HDFS) Capacity Remaining' FROM Metric TIMESERIES 5 minutes UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "Cluster jobs status (hadoop 1)",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 13,
                        "column": 1
                    },
                    "visualization": {
                        "id": "viz.bar"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.elasticmapreduce.JobsRunning`) as 'Jobs Running', average(`aws.elasticmapreduce.JobsFailed`) as 'Jobs Failed' FROM Metric TIMESERIES auto UNTIL 5 minutes ago FACET entity.name"
                            }
                        ]
                    }
                },
                {
                    "title": "Task nodes status (hadoop 1)",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 13,
                        "column": 5
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.elasticmapreduce.TaskNodesRunning`) as 'Task Nodes Running', average(`aws.elasticmapreduce.TaskNodesPending`) as 'Task Nodes Pending' FROM Metric TIMESERIES auto UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "Map tasks (hadoop 1)",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 13,
                        "column": 9
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`provider.mapTasksRunning`) as 'Map Tasks Running', average(`provider.mapTasksRemaining`) as 'Map Tasks Remaining', average(`aws.elasticmapreduce.MapSlotsOpen`) as 'Unused Task Capacity' FROM Metric TIMESERIES auto UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "Reduce tasks (hadoop 1)",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 16,
                        "column": 1
                    },
                    "visualization": {
                        "id": "viz.line"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`provider.reduceTasksRunning`) as 'Reduce Tasks Running', average(`provider.reduceTasksRemaining`) as 'Reduce Tasks Remaining', average(`aws.elasticmapreduce.ReduceSlotsOpen`) as 'Reduce Task Capacity' FROM Metric TIMESERIES auto UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "title": "Hbase backup status",
                    "layout": {
                        "height": 3,
                        "width": 4,
                        "row": 16,
                        "column": 5
                    },
                    "visualization": {
                        "id": "viz.billboard"
                    },
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT sum(`provider.backupFailed`) + sum(`provider.hbaseBackupFailed`) as 'Last Backup Failed', average(`provider.mostRecentBackupDuration`) as 'Most Recent Backup Duration', average(`provider.timeSinceLastSuccessfulBackup`) as 'Time Since Last Successful Backup' FROM Metric UNTIL 5 minutes ago"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}